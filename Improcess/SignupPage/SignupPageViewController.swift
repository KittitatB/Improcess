//
//  SignupPageViewController.swift
//  Improcess
//
//  Created by MuMhu on 15/10/2561 BE.
//  Copyright (c) 2561 Kittitat Boonkarn. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SignupPageDisplayLogic: class
{
    func displaySignupResult(viewModel: SignupPage.SignupData.ViewModel)
}

class SignupPageViewController: UIViewController, SignupPageDisplayLogic, UITextFieldDelegate
{
    var interactor: SignupPageBusinessLogic?
    var router: (NSObjectProtocol & SignupPageRoutingLogic & SignupPageDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = SignupPageInteractor()
        let presenter = SignupPagePresenter()
        let router = SignupPageRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        self.hideKeyboardWhenTappedAround()
        self.usernameTextfield.delegate = self
        self.passwordTextfield.delegate = self
    }
    
    // MARK: Do something
    @IBOutlet weak var usernameTextfield: UITextField!
    @IBOutlet weak var passwordTextfield: UITextField!
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        textField.resignFirstResponder()
        return true
    }
    
    func displaySignupResult(viewModel: SignupPage.SignupData.ViewModel)
    {
        if viewModel.isError == true{
            displayErrorMessage(message: viewModel.errorMessage ?? "Somethings went wrong!")
        }
        else{
            signupComplete()
        }
    }
    
    func displayErrorMessage(message: String){
        let alert = UIAlertController(title: "Error", message: message, preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "OK", style: .default, handler: nil))
        self.present(alert, animated: true, completion: nil)
    }
    
    func signupComplete(){
        let alert = UIAlertController(title: "Successs!", message: "Welcome to Improcess", preferredStyle: .alert)
        let action = UIAlertAction(title: "OK", style: .default) { (UIAlertAction) in
            self.performSegue(withIdentifier: "Signed", sender: nil)
        }
        alert.addAction(action)
        self.present(alert, animated: true, completion: nil)
    }
    
    @IBAction func handleSignup(_ sender: Any) {
        let username = usernameTextfield.text ?? ""
        let password = passwordTextfield.text ?? ""
        let request = SignupPage.SignupData.Request(username: username, password: password)
        interactor?.signup(request: request)
    }
}
