//
//  ProjectPageInteractor.swift
//  Improcess
//
//  Created by MuMhu on 30/10/2561 BE.
//  Copyright (c) 2561 Kittitat Boonkarn. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProjectPageBusinessLogic
{
    var project: ProjectDetail? {get set}
    var phraseList: [PhraseTypeList] {get set}
    var defectList: [DefectTypeList] {get set}
    var selectedTask: ProjectTask? {get set}
    
    func addTask(task: String, numberOfTask: Int)
    func receiveProject()
    func requestTasks()
    func requestPhraseList()
    func requestDefectList()
}

protocol ProjectPageDataStore
{
    var project: ProjectDetail? {get set}
    var phraseList: [PhraseTypeList] {get set}
    var defectList: [DefectTypeList] {get set}
    var selectedTask: ProjectTask? {get set}
}

class ProjectPageInteractor: ProjectPageBusinessLogic, ProjectPageDataStore
{
    var phraseList: [PhraseTypeList] = []
    var defectList: [DefectTypeList] = []
    var selectedTask: ProjectTask?
    var presenter: ProjectPagePresentationLogic?
    var worker: ProjectPageWorker?
    var project: ProjectDetail?
    // MARK: Do something
    
    func receiveProject() {
        let response = ProjectPage.Project.Response(project: project!)
        presenter?.presentProject(response: response)
    }
    
    func addTask(task: String, numberOfTask: Int) {
        worker = ProjectPageWorker()
        worker?.updateTaskChild(project: project!, task: task, numberOfTask: numberOfTask)
    }

    func requestTasks() {
        worker = ProjectPageWorker()
        if project?.taskQuantity == 0 {
            return
        }
        worker?.requestTaskFormFirebase(project: project!, completionHandler: { (tasks) in
            let response = ProjectPage.Task.Response(task: tasks)
            self.presenter?.presentTask(response: response)
        })
    }
    
    func requestPhraseList() {
        worker = ProjectPageWorker()
    
        worker?.requestPhraseListFormFirebase(project: project!, completionHandler: { (lists) in
            self.phraseList = lists
        })
    }
    
    func requestDefectList() {
        worker = ProjectPageWorker()

        worker?.requestDefectListFormFirebase(project: project!, completionHandler: { (lists) in
            self.defectList = lists
        })
    }
}
